{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","id","onClick","Notification","message","App","state","handleFeedBack","setState","prevState","this","countTotalFeedback","toFixed","isFeedBack","countPositiveFeedbackPercentage","Component","ReactDOM","render","document","getElementById"],"mappings":"iLAgBeA,MAbf,YAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACrB,OACI,iCACI,4BAAKD,GACJC,ICiBEC,EArBI,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBACxC,OACI,oCACI,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,0CAAgBC,GAChB,6CAAmBC,EAAnB,OCQDC,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,oCACI,4BAAQC,GAAIF,EAAQ,GAAIG,QAAS,kBAAMF,EAAgBD,EAAQ,MAAMA,EAAQ,IAC7E,4BAAQE,GAAIF,EAAQ,GAAIG,QAAS,kBAAMF,EAAgBD,EAAQ,MAAMA,EAAQ,IAC7E,4BAAQE,GAAIF,EAAQ,GAAIG,QAAS,kBAAMF,EAAgBD,EAAQ,MAAMA,EAAQ,MCK1EI,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,2BAAIA,ICESC,E,4MACjBC,MAAQ,CACJb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTI,QAAU,CACN,OAAQ,UAAW,O,EAGvBQ,eAAiB,SAACN,GACd,EAAKO,UAAS,SAAAC,GACV,OAAO,eACFR,EAAKQ,EAAUR,GAAM,O,mEAM9B,OAAOS,KAAKJ,MAAMb,KAAOiB,KAAKJ,MAAMZ,QAAUgB,KAAKJ,MAAMX,M,wDAIzD,IAAMC,EAAQc,KAAKC,qBACnB,OAAiB,IAAVf,EAAc,GAAKc,KAAKJ,MAAMb,KAAOG,EAAQ,KAAKgB,QAAQ,K,+BAIjE,IAAMC,EAAaH,KAAKC,qBAExB,OACI,6BACI,kBAAC,EAAD,CAASrB,MAAM,yBACX,kBAAC,EAAD,CAAiBS,QAASW,KAAKX,QAASC,gBAAiBU,KAAKH,kBAGlE,kBAAC,EAAD,CAASjB,MAAM,cACVuB,EACG,kBAAC,EAAD,CACIpB,KAAMiB,KAAKJ,MAAMb,KACjBC,QAASgB,KAAKJ,MAAMZ,QACpBC,IAAKe,KAAKJ,MAAMX,IAChBC,MAAOc,KAAKC,qBACZd,mBAAoBa,KAAKI,oCAE7B,kBAAC,EAAD,CAAcV,QAAQ,4B,GA9CbW,aCHjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.1634429a.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction Section({title, children}) {\r\n    return(\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: propTypes.string,\r\n    children: propTypes.node.isRequired \r\n}\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => {\r\n        return (\r\n            <>\r\n                <p>Good: {good}</p>\r\n                <p>Neutral: {neutral}</p>\r\n                <p>Bad: {bad}</p>\r\n                <p>CountTotal: {total}</p>\r\n                <p>CountPositive: {positivePercentage}%</p>\r\n            </>            \r\n        )\r\n}\r\n\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return(\r\n        <>\r\n            <button id={options[0]} onClick={() => onLeaveFeedback(options[0])}>{options[0]}</button>\r\n            <button id={options[1]} onClick={() => onLeaveFeedback(options[1])}>{options[1]}</button>\r\n            <button id={options[2]} onClick={() => onLeaveFeedback(options[2])}>{options[2]}</button>\r\n        </>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport Section from './Section/Section';\r\nimport Statistics from './Statistics/Statistics';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Notification from './Notification/Notification';\r\n\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n\r\n    options = [\r\n        \"good\", \"neutral\", \"bad\"\r\n    ]\r\n\r\n    handleFeedBack = (id) => {\r\n        this.setState(prevState => {\r\n            return {\r\n                [id]: prevState[id] + 1\r\n            }\r\n        })\r\n    }\r\n\r\n    countTotalFeedback() {\r\n        return this.state.good + this.state.neutral + this.state.bad;\r\n    }\r\n\r\n    countPositiveFeedbackPercentage() {\r\n        const total = this.countTotalFeedback();\r\n        return total === 0 ? 0 : (this.state.good / total * 100).toFixed(1);\r\n    }\r\n\r\n    render() {\r\n        const isFeedBack = this.countTotalFeedback();\r\n\r\n        return (\r\n            <div>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions options={this.options} onLeaveFeedback={this.handleFeedBack} />\r\n                </Section>\r\n\r\n                <Section title=\"Statistics\">\r\n                    {isFeedBack ?\r\n                        <Statistics\r\n                            good={this.state.good}\r\n                            neutral={this.state.neutral}\r\n                            bad={this.state.bad}\r\n                            total={this.countTotalFeedback()}\r\n                            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n                        /> :\r\n                        <Notification message=\"No feedback given\" />}\r\n                </Section>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}